/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.ifba.curso.view;

import br.com.ifba.curso.controller.CursoController;
import br.com.ifba.curso.controller.CursoIController;
import br.com.ifba.curso.entity.Curso;
import jakarta.annotation.PostConstruct;
import java.awt.GraphicsEnvironment;
import java.awt.event.WindowEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lombok.RequiredArgsConstructor;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Component;

/**
 *
 * @author rober
 */
@Component
@Lazy
@RequiredArgsConstructor
public class CursoListar extends javax.swing.JFrame {

    /**
     * Creates new form CursoListar
     */
    
    /**
     * Modelo da tabela utilizado para exibir os dados dos cursos.
     * Colunas: ID, Nome, Código do Curso e Ativo.
     */
    private final DefaultTableModel tabela = new DefaultTableModel(new Object[]{"ID", "Nome", "Código Curso", "Ativo"}, 0);
    
    /**
     * Armazena a linha selecionada na tabela.
     */
    private int linhaSelecionada = 0;
    
    /**
     * Variavel responsavel pelo CRUD
     */
    private final CursoIController cursoController;
    
    {
        initComponents();
    }
    
     @PostConstruct 
     private void init() { 
         if (!GraphicsEnvironment.isHeadless()) { 
             initTable(); 
         } 
     }
    
     /**
     * Inicializa a tabela preenchendo-a com os dados de todos os cursos armazenados no banco.
     * 
     * Este método recupera todos os cursos e preenche a tabela com os dados de cada curso. 
     * Após preencher os dados, o modelo da tabela é atualizado para exibir as informações.
     */
    public void initTable () {
        List<Curso> cursos = cursoController.findAll();
        for (Curso curso : cursos) {
            tabela.addRow(new Object[]{curso.getId(), curso.getNome(), curso.getCodigoCurso(), curso.isAtivo()});
        }
        tableCurso.setModel(tabela);
    }
    
    /**
     * Atualiza os dados da tabela, garantindo que as informações exibidas estejam sincronizadas
     * com os dados do banco de dados.
     * 
     * Este método limpa a tabela atual (removendo todas as linhas) e recarrega as informações 
     * de todos os cursos cadastrados no banco de dados.
     * Após atualizar os dados, o modelo da tabela é configurado novamente para refletir 
     * as informações mais recentes.
    */
    public void updateTable () {
        tabela.setRowCount(0);
        List<Curso> cursos = cursoController.findAll();
        for (Curso curso : cursos) {
            tabela.addRow(new Object[]{curso.getId(), curso.getNome(), curso.getCodigoCurso(), curso.isAtivo()});
        }
        tableCurso.setModel(tabela);
    }
    
    /**
    * Atualiza a tabela de cursos com os resultados da busca por nome.
    * 
    * Este método realiza uma busca por cursos com base no nome fornecido. A lista de cursos retornada
    * é utilizada para atualizar a tabela na interface gráfica.
    *
    * @param nome O nome do curso a ser buscado, utilizado para realizar a pesquisa no banco de dados.
    */
    public void updataTableBySearchNome(String nome) {
        List<Curso> cursos = cursoController.findByNomeLikeIgnoreCase(nome);
        if (cursos != null) {
            tabela.setRowCount(0);
            for (Curso curso : cursos) {
                tabela.addRow(new Object[]{curso.getId(), curso.getNome(), curso.getCodigoCurso(), curso.isAtivo()});
            }
            tableCurso.setModel(tabela);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TelaCadastro = new javax.swing.JFrame();
        lblTextoCadastroCurso = new javax.swing.JLabel();
        btnSalvarCadastro = new javax.swing.JButton();
        btnCancelarCadastro = new javax.swing.JButton();
        radioBtnInativoCadastro = new javax.swing.JRadioButton();
        radioBtnAtivoCadastro = new javax.swing.JRadioButton();
        lblTextoStatusCadastro = new javax.swing.JLabel();
        lblTextoCodigoCadastro = new javax.swing.JLabel();
        lblTextoNomeCadastro = new javax.swing.JLabel();
        txtNomeCadastro = new javax.swing.JTextField();
        txtCodigoCadastro = new javax.swing.JTextField();
        TelaEditar = new javax.swing.JFrame();
        txtEditarNome = new javax.swing.JTextField();
        txtEditarCodigo = new javax.swing.JTextField();
        lblTextoEditarCurso = new javax.swing.JLabel();
        btnSalvarAlteracoes = new javax.swing.JButton();
        btnEditarCancelar = new javax.swing.JButton();
        radioBtnInativoEditar = new javax.swing.JRadioButton();
        radioBtnAtivoEditar = new javax.swing.JRadioButton();
        lblTextoStatusEditar = new javax.swing.JLabel();
        lblTextoCodigoEditar = new javax.swing.JLabel();
        lblTextoNomeEditar = new javax.swing.JLabel();
        btnGroupCadastro = new javax.swing.ButtonGroup();
        btnGroupEditar = new javax.swing.ButtonGroup();
        panelTabelaCurso = new javax.swing.JScrollPane();
        tableCurso = new javax.swing.JTable();
        btnAEditar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        btnAdicionar = new javax.swing.JButton();
        lblTextoLinhaSelecionada = new javax.swing.JLabel();
        lblLinhaSelecionada = new javax.swing.JLabel();
        txtProcurar = new javax.swing.JTextField();
        lblTextoBuscarCurso = new javax.swing.JLabel();

        TelaCadastro.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        TelaCadastro.setMinimumSize(new java.awt.Dimension(422, 334));
        TelaCadastro.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                TelaCadastroWindowClosed(evt);
            }
        });

        lblTextoCadastroCurso.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblTextoCadastroCurso.setText("Cadastro Curso");

        btnSalvarCadastro.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnSalvarCadastro.setText("Salvar");
        btnSalvarCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarCadastroActionPerformed(evt);
            }
        });

        btnCancelarCadastro.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnCancelarCadastro.setText("Cancelar");
        btnCancelarCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarCadastroActionPerformed(evt);
            }
        });

        btnGroupCadastro.add(radioBtnInativoCadastro);
        radioBtnInativoCadastro.setText("Inativo");
        radioBtnInativoCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtnInativoCadastroActionPerformed(evt);
            }
        });

        btnGroupCadastro.add(radioBtnAtivoCadastro);
        radioBtnAtivoCadastro.setText("Ativo");

        lblTextoStatusCadastro.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lblTextoStatusCadastro.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTextoStatusCadastro.setText("Status");

        lblTextoCodigoCadastro.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lblTextoCodigoCadastro.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTextoCodigoCadastro.setText("Código Curso");

        lblTextoNomeCadastro.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lblTextoNomeCadastro.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTextoNomeCadastro.setText("Nome");

        txtNomeCadastro.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        txtCodigoCadastro.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        javax.swing.GroupLayout TelaCadastroLayout = new javax.swing.GroupLayout(TelaCadastro.getContentPane());
        TelaCadastro.getContentPane().setLayout(TelaCadastroLayout);
        TelaCadastroLayout.setHorizontalGroup(
            TelaCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TelaCadastroLayout.createSequentialGroup()
                .addGroup(TelaCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TelaCadastroLayout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(lblTextoNomeCadastro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomeCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(TelaCadastroLayout.createSequentialGroup()
                        .addComponent(lblTextoStatusCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(radioBtnAtivoCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioBtnInativoCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(TelaCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, TelaCadastroLayout.createSequentialGroup()
                            .addGap(93, 93, 93)
                            .addComponent(btnCancelarCadastro)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSalvarCadastro))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, TelaCadastroLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(lblTextoCodigoCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtCodigoCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(120, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TelaCadastroLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblTextoCadastroCurso)
                .addGap(121, 121, 121))
        );
        TelaCadastroLayout.setVerticalGroup(
            TelaCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TelaCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTextoCadastroCurso)
                .addGap(38, 38, 38)
                .addGroup(TelaCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTextoNomeCadastro)
                    .addComponent(txtNomeCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(TelaCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodigoCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTextoCodigoCadastro))
                .addGap(24, 24, 24)
                .addGroup(TelaCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTextoStatusCadastro)
                    .addComponent(radioBtnAtivoCadastro)
                    .addComponent(radioBtnInativoCadastro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(TelaCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelarCadastro)
                    .addComponent(btnSalvarCadastro))
                .addGap(60, 60, 60))
        );

        TelaEditar.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        TelaEditar.setMinimumSize(new java.awt.Dimension(432, 343));
        TelaEditar.setResizable(false);
        TelaEditar.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                TelaEditarWindowClosed(evt);
            }
        });

        txtEditarNome.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        txtEditarCodigo.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        lblTextoEditarCurso.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblTextoEditarCurso.setText("Editar Curso");

        btnSalvarAlteracoes.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnSalvarAlteracoes.setText("Salvar");
        btnSalvarAlteracoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarAlteracoesActionPerformed(evt);
            }
        });

        btnEditarCancelar.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnEditarCancelar.setText("Cancelar");
        btnEditarCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarCancelarActionPerformed(evt);
            }
        });

        btnGroupEditar.add(radioBtnInativoEditar);
        radioBtnInativoEditar.setText("Inativo");
        radioBtnInativoEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtnInativoEditarActionPerformed(evt);
            }
        });

        btnGroupEditar.add(radioBtnAtivoEditar);
        radioBtnAtivoEditar.setText("Ativo");

        lblTextoStatusEditar.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lblTextoStatusEditar.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTextoStatusEditar.setText("Status");

        lblTextoCodigoEditar.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lblTextoCodigoEditar.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTextoCodigoEditar.setText("Código Curso");

        lblTextoNomeEditar.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lblTextoNomeEditar.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTextoNomeEditar.setText("Nome");

        javax.swing.GroupLayout TelaEditarLayout = new javax.swing.GroupLayout(TelaEditar.getContentPane());
        TelaEditar.getContentPane().setLayout(TelaEditarLayout);
        TelaEditarLayout.setHorizontalGroup(
            TelaEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TelaEditarLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(TelaEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TelaEditarLayout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(btnEditarCancelar)
                        .addGap(59, 59, 59)
                        .addComponent(btnSalvarAlteracoes))
                    .addGroup(TelaEditarLayout.createSequentialGroup()
                        .addComponent(lblTextoStatusEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(radioBtnAtivoEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioBtnInativoEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(TelaEditarLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(TelaEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTextoCodigoEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTextoNomeEditar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(TelaEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEditarNome, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEditarCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(65, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TelaEditarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTextoEditarCurso)
                .addGap(135, 135, 135))
        );
        TelaEditarLayout.setVerticalGroup(
            TelaEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TelaEditarLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblTextoEditarCurso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(TelaEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTextoNomeEditar)
                    .addComponent(txtEditarNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(TelaEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEditarCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTextoCodigoEditar))
                .addGap(21, 21, 21)
                .addGroup(TelaEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTextoStatusEditar)
                    .addComponent(radioBtnAtivoEditar)
                    .addComponent(radioBtnInativoEditar))
                .addGap(41, 41, 41)
                .addGroup(TelaEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditarCancelar)
                    .addComponent(btnSalvarAlteracoes))
                .addGap(37, 37, 37))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 255, 255));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tableCurso.setModel(tabela);
        tableCurso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCursoMouseClicked(evt);
            }
        });
        panelTabelaCurso.setViewportView(tableCurso);

        btnAEditar.setText("Edite");
        btnAEditar.setToolTipText("");
        btnAEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAEditarActionPerformed(evt);
            }
        });

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        lblTextoLinhaSelecionada.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblTextoLinhaSelecionada.setText("Linha Selecionada :");

        lblLinhaSelecionada.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblLinhaSelecionada.setText("0");

        txtProcurar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtProcurar.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtProcurar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtProcurarKeyPressed(evt);
            }
        });

        lblTextoBuscarCurso.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblTextoBuscarCurso.setText("Informe o Nome do Curso");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTextoBuscarCurso)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblTextoLinhaSelecionada)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblLinhaSelecionada, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelTabelaCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAdicionar)
                            .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTextoLinhaSelecionada)
                            .addComponent(lblLinhaSelecionada)
                            .addComponent(lblTextoBuscarCurso)
                            .addComponent(txtProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addComponent(btnAdicionar)
                        .addGap(51, 51, 51)
                        .addComponent(btnRemover)
                        .addGap(45, 45, 45)
                        .addComponent(btnAEditar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(panelTabelaCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
    * Método chamado ao clicar no botão "Remover" para excluir um curso selecionado.
    * 
    * Este método verifica se uma linha da tabela foi selecionada. Caso contrário, exibe uma mensagem de alerta.
    * Se uma linha for selecionada, o usuário é solicitado a confirmar a exclusão do curso. Se a resposta for 
    * afirmativa o curso é removido do banco de dados.
    * Após a exclusão, uma mensagem de sucesso é exibida, e a tabela é atualizada para refletir a remoção.
    * Caso o usuário cancele a operação, uma mensagem de cancelamento é mostrada.
    * 
    * @param evt o evento acionado pelo clique no botão "Remover".
    */
    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        // TODO add your handling code here:
        if (linhaSelecionada >= 0) {
            int resposta = JOptionPane.showConfirmDialog(
            null, "Tem certeza que deseja excluir ?",
            "Alerta", JOptionPane.WARNING_MESSAGE);
            
            if (resposta == JOptionPane.YES_OPTION) {
                Curso curso = new Curso();
                curso.setId((long) tabela.getValueAt(linhaSelecionada, 0));
                curso.setNome((String) tabela.getValueAt(linhaSelecionada, 1));
                curso.setCodigoCurso((String) tabela.getValueAt(linhaSelecionada, 2));
                curso.setAtivo((boolean) tabela.getValueAt(linhaSelecionada, 3));
                
                cursoController.delete(curso);
                
                JOptionPane.showMessageDialog(
                null, "Curso Excluido!",
                "Notificação", JOptionPane.INFORMATION_MESSAGE);
                this.updateTable();
            } else {
                JOptionPane.showMessageDialog(
                null, "Operação Cancelada",
                "Notificação", JOptionPane.INFORMATION_MESSAGE);
            }
            
        } else {
            JOptionPane.showMessageDialog(
            null, "Nenhum Curso foi selecionado!",
            "Alerta", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    /**
    * Evento acionado quando o botão 'Adicionar' é clicado.
    * Altera a visibiladade da tela de cadastro para true
    *
    * @param evt O evento que representa o clique no botão.
    */
    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        TelaCadastro.setVisible(true);
    }//GEN-LAST:event_btnAdicionarActionPerformed

    /**
    * Método chamado quando o usuário clica em uma linha da tabela
    * 
    * Este método captura o índice da linha selecionada na tabela e armazena no atributo {@code linhaSelecionada}.
    * Além disso, atualiza o rótulo {@link lblLinhaSelecionada} para exibir o número da linha selecionada (começando de 1).
    * 
    * @param evt o evento acionado pelo clique do usuário na tabela.
    */
    private void tableCursoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCursoMouseClicked
        linhaSelecionada = tableCurso.getSelectedRow();
        lblLinhaSelecionada.setText(Integer.toString(linhaSelecionada + 1));
    }//GEN-LAST:event_tableCursoMouseClicked

    /**
    * Método acionado ao clicar no botão de editar.
    * 
    * Este método verifica se uma linha da tabela foi selecionada. Caso contrário, exibe uma mensagem de alerta.
    * Se uma linha for selecionada, o método altera a visibilidade da tela de edição para true
    * 
    * Se nenhum curso for selecionado, uma mensagem de alerta é exibida ao usuário.
    * 
    * @param evt o evento acionado pelo clique no botão "Editar".
    */
    private void btnAEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAEditarActionPerformed
        if (Integer.parseInt(lblLinhaSelecionada.getText()) > 0) {
            TelaEditar.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(
                null, "Nenhum Curso foi selecionado para edição!",
                "Alerta", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnAEditarActionPerformed

    /**
    * Evento disparado quando uma tecla é pressionada no campo de busca para filtrar cursos por nome.
    * 
    * Este método é acionado sempre que uma tecla é pressionada no campo de texto {@code txtProcurar}.
    * Ele verifica o texto inserido e, se o campo não estiver vazio, realiza uma busca por cursos cujo nome
    * corresponda ao texto digitado, atualizando a tabela com os resultados.
    *
    * @param evt O evento de pressionamento de tecla, que contém as informações da tecla pressionada.
    */
    private void txtProcurarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProcurarKeyPressed
        String nome = txtProcurar.getText();
        if (!nome.equals("")) {
            updataTableBySearchNome(nome);
        } else {
            updateTable();
        }
    }//GEN-LAST:event_txtProcurarKeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
    }//GEN-LAST:event_formWindowClosing
    /**
    * Evento acionado ao clicar no botão "Salvar" para cadastrar um novo curso.
    * 
    * Este método verifica se os campos obrigatórios estão preenchidos e, caso contrário, exibe uma mensagem de alerta.
    * Se todos os campos estiverem preenchidos, cria um objeto {@link Curso}, define seus atributos e salva o curso
    * Após salvar, exibe uma mensagem de sucesso ao usuário.
    * 
    * @param evt o evento acionado pelo clique no botão "Salvar".
    */
    private void btnSalvarCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarCadastroActionPerformed
        if (txtNomeCadastro.getText().equals("") ||
            txtCodigoCadastro.getText().equals("") ||
            (!radioBtnAtivoCadastro.isSelected() && !radioBtnInativoCadastro.isSelected()))
        {
            JOptionPane.showMessageDialog(
                null, "Existem campos vazios, preencha todos e tente novamente!",
                "Alerta", JOptionPane.WARNING_MESSAGE);
        } else {
            Curso curso = new Curso();
            curso.setNome(txtNomeCadastro.getText());
            curso.setCodigoCurso(txtCodigoCadastro.getText());
            if (radioBtnAtivoCadastro.isSelected()) {
                curso.setAtivo(true);
            } else {
                curso.setAtivo(false);
            }

            cursoController.save(curso);

            JOptionPane.showMessageDialog(
                null, "Curso Cadastrado com Sucesso!",
                "Salvo", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnSalvarCadastroActionPerformed

    /**
    * Evento acionado ao clicar no botão "Cancelar" para limpar os campos do formulário de cadastro.
    * 
    * Este método limpa todos os campos de entrada do formulário de cadastro e desmarca os botões de seleção.
    * 
    * @param evt o evento acionado pelo clique no botão "Cancelar".
    */
    private void btnCancelarCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarCadastroActionPerformed
        // TODO add your handling code here:
        txtNomeCadastro.setText("");
        txtCodigoCadastro.setText("");
        radioBtnAtivoCadastro.setSelected(false);
        btnGroupCadastro.clearSelection();
    }//GEN-LAST:event_btnCancelarCadastroActionPerformed

    private void radioBtnInativoCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtnInativoCadastroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioBtnInativoCadastroActionPerformed

    /**
    * Evento acionado ao clicar no botão "Salvar Alterações" para editar um curso existente.
    * 
    * Este método verifica se os campos obrigatórios estão preenchidos e, caso contrário, exibe uma mensagem de alerta.
    * Se todos os campos estiverem preenchidos, cria um objeto {@link Curso}, define seus atributos atualizados e salva as alterações
    * Após salvar, exibe uma mensagem de sucesso ao usuário.
    * 
    * @param evt o evento acionado pelo clique no botão "Salvar Alterações".
    */
    private void btnSalvarAlteracoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarAlteracoesActionPerformed
        if (txtEditarNome.getText().equals("") ||
            txtEditarCodigo.getText().equals("") ||
            (!radioBtnAtivoEditar.isSelected() && !radioBtnInativoEditar.isSelected()))
        {
            JOptionPane.showMessageDialog(
                null, "Existem campos vazios, preencha todos e tente novamente!",
                "Alerta", JOptionPane.WARNING_MESSAGE);
        } else {
            Curso curso = new Curso();
            long idItem = (long) tabela.getValueAt(Integer.parseInt(lblLinhaSelecionada.getText()) - 1, 0);
            curso.setId(idItem);
            curso.setNome(txtEditarNome.getText());
            curso.setCodigoCurso(txtEditarCodigo.getText());
            if (radioBtnAtivoEditar.isSelected()) {
                curso.setAtivo(true);
            } else {
                curso.setAtivo(false);
            }
            cursoController.update(curso);
            JOptionPane.showMessageDialog(
                null, "Curso Editado com Sucesso!",
                "Salvo", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnSalvarAlteracoesActionPerformed
    /**
    * Evento acionado ao clicar no botão "Cancelar" para limpar os campos do formulário de cadastro.
    * 
    * Este método limpa todos os campos de entrada do formulário de cadastro e desmarca os botões de seleção.
    * 
    * @param evt o evento acionado pelo clique no botão "Cancelar".
    */
    private void btnEditarCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarCancelarActionPerformed
        txtNomeCadastro.setText("");
        txtCodigoCadastro.setText("");
        radioBtnAtivoCadastro.setSelected(false);
        btnGroupEditar.clearSelection();
    }//GEN-LAST:event_btnEditarCancelarActionPerformed

    private void radioBtnInativoEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtnInativoEditarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioBtnInativoEditarActionPerformed

    private void TelaCadastroWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_TelaCadastroWindowClosed
        updateTable();
    }//GEN-LAST:event_TelaCadastroWindowClosed

    private void TelaEditarWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_TelaEditarWindowClosed
        updateTable();
    }//GEN-LAST:event_TelaEditarWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       /* Set the Nimbus look and feel */ 
       //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) "> 
       /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel. * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html */ 
       try {
           for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) { 
               if ("Nimbus".equals(info.getName())) { 
                   javax.swing.UIManager.setLookAndFeel(info.getClassName()); 
                   break;
               } 
           } 
       } catch (ClassNotFoundException ex) { 
           java.util.logging.Logger.getLogger(CursoListar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); 
       } catch (InstantiationException ex) { 
           java.util.logging.Logger.getLogger(CursoListar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); 
       } catch (IllegalAccessException ex) { 
           java.util.logging.Logger.getLogger(CursoListar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); 
       } catch (javax.swing.UnsupportedLookAndFeelException ex) { 
           java.util.logging.Logger.getLogger(CursoListar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); 
       } 
       //</editor-fold> 
       /* Create and display the form */ 
       java.awt.EventQueue.invokeLater(() -> {
           CursoIController CursoController = null;
            CursoListar cursoListar = new CursoListar(CursoController);
            cursoListar.setVisible(true);
            cursoListar.init();
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame TelaCadastro;
    private javax.swing.JFrame TelaEditar;
    private javax.swing.JButton btnAEditar;
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnCancelarCadastro;
    private javax.swing.JButton btnEditarCancelar;
    private javax.swing.ButtonGroup btnGroupCadastro;
    private javax.swing.ButtonGroup btnGroupEditar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnSalvarAlteracoes;
    private javax.swing.JButton btnSalvarCadastro;
    private javax.swing.JLabel lblLinhaSelecionada;
    private javax.swing.JLabel lblTextoBuscarCurso;
    private javax.swing.JLabel lblTextoCadastroCurso;
    private javax.swing.JLabel lblTextoCodigoCadastro;
    private javax.swing.JLabel lblTextoCodigoEditar;
    private javax.swing.JLabel lblTextoEditarCurso;
    private javax.swing.JLabel lblTextoLinhaSelecionada;
    private javax.swing.JLabel lblTextoNomeCadastro;
    private javax.swing.JLabel lblTextoNomeEditar;
    private javax.swing.JLabel lblTextoStatusCadastro;
    private javax.swing.JLabel lblTextoStatusEditar;
    private javax.swing.JScrollPane panelTabelaCurso;
    private javax.swing.JRadioButton radioBtnAtivoCadastro;
    private javax.swing.JRadioButton radioBtnAtivoEditar;
    private javax.swing.JRadioButton radioBtnInativoCadastro;
    private javax.swing.JRadioButton radioBtnInativoEditar;
    private javax.swing.JTable tableCurso;
    private javax.swing.JTextField txtCodigoCadastro;
    private javax.swing.JTextField txtEditarCodigo;
    private javax.swing.JTextField txtEditarNome;
    private javax.swing.JTextField txtNomeCadastro;
    private javax.swing.JTextField txtProcurar;
    // End of variables declaration//GEN-END:variables
}
